% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multipartiteBMFixedModel.R
\name{multipartiteBMFixedModel}
\alias{multipartiteBMFixedModel}
\title{Model selection and estimation of multipartite blockmodels}
\usage{
multipartiteBMFixedModel(
  list_Net,
  v_distrib,
  namesFG,
  v_K = NULL,
  classifInit = NULL,
  nbCores = NULL,
  maxiterVE = NULL,
  maxiterVEM = NULL,
  verbose = TRUE
)
}
\arguments{
\item{list_Net}{A list of network (defined via the function DefineNetwork)}

\item{v_distrib}{Type of proababilistic distributions in each network : if 0/1 then Bernoulli, if counting then Poisson. My default  = Bernoulli.
Must give a vector whose length is the number of networks in list_Net}

\item{namesFG}{Names of functional groups (must correspond to names in listNet)}

\item{v_K}{A vector with the numbers of blocks per functional group}

\item{classifInit}{A list of initial classification for each functional group in the same order as in namesFG}

\item{nbCores}{Number or cores used for the estimation. Not parallelized on windows. By default : half of the cores}

\item{maxiterVE}{Maximum number of iterations in the VE step of the VEM algorithm. Default value  = 1000}

\item{maxiterVEM}{Maximum number of iterations of the VEM algorithm. Default value  = 1000}

\item{verbose}{Set to TRUE to display the current step of the search algorithm}
}
\value{
Estimated parameters and a classification
}
\description{
Estimate the parameters and give the clustering for given numbers of blocks
}
\examples{
v_K <- c(3,2,2)
n_FG <- 3
list_pi <- vector("list", 3);
list_pi[[1]] <- c(0.4,0.3,0.3); list_pi[[2]] <- c(0.6,0.4); list_pi[[3]]  <- c(0.6,0.4)
E  = rbind(c(1,2),c(2,3),c(2,2))
v_distrib <- c('bernoulli','poisson','poisson')
typeInter <- c( "inc", "inc"  ,  "adj" )
list_theta <- list()
list_theta[[1]] <- matrix(rbeta(v_K[E[1,1]] * v_K[E[1,2]],1.5,1.5 ),nrow = v_K[E[1,1]], ncol = v_K[E[1,2]])
list_theta[[2]] <- matrix(rgamma(v_K[E[2,1]] * v_K[E[2,2]],7.5,1 ),nrow = v_K[E[2,1]], ncol = v_K[E[2,2]])
list_theta[[3]] <- matrix(rgamma(v_K[E[3,1]] * v_K[E[3,2]],7.5,1 ),nrow = v_K[E[3,1]], ncol = v_K[E[3,2]])
list_theta[[3]] <- 0.5*(list_theta[[3]] + t(list_theta[[3]])) # symetrisation for network 3
v_NQ = c(100,50,40)
list_Net <- rMBM(v_NQ ,E , typeInter, v_distrib, list_pi, list_theta, seed=NULL, namesFG= c('A','B','D'))$list_Net
res <- multipartiteBMFixedModel(list_Net,namesFG = c('A','B','D'),v_distrib = v_distrib,v_K = c(3,2,2))
}
